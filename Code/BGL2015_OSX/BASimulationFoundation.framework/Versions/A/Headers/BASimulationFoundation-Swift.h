// Generated by Apple Swift version 3.0.2 (swiftlang-800.0.63 clang-800.0.42.1)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if defined(__has_attribute) && __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if defined(__has_feature) && __has_feature(modules)
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"

@interface NSDateFormatter (SWIFT_EXTENSION(BASimulationFoundation))
+ (NSDateFormatter * _Nonnull)RFC3339DateFormatter;
- (NSString * _Nonnull)stringFromTimeInterval:(NSTimeInterval)timeIntervalSinceReferenceDate;
@end

@class InternedStrings;
@class NSString;
@class NSCoder;

SWIFT_CLASS("_TtC22BASimulationFoundation10Identifier")
@interface Identifier : NSObject <NSCoding, NSCopying>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull systemIdentifierTag;)
+ (NSString * _Nonnull)systemIdentifierTag;
+ (void)setSystemIdentifierTag:(NSString * _Nonnull)value;
+ (BOOL)isSystemIdentifierString:(NSString * _Nonnull)idString;
+ (BOOL)isValidIdentifierString:(NSString * _Nonnull)idString;
+ (Identifier * _Nonnull)timeStampedIdentifier:(Identifier * _Nonnull)baseIdentifier;
+ (Identifier * _Nonnull)timeStampedIdentifierFromString:(NSString * _Nonnull)baseIdentifierString;
+ (InternedStrings * _Nonnull)backingStore;
+ (NSArray<NSString *> * _Nonnull)toStrings:(NSArray<Identifier *> * _Nonnull)identifiers;
@property (nonatomic, readonly, strong) NSString * _Nonnull idString;
@property (nonatomic, readonly) BOOL isSystemIdentifier;
@property (nonatomic, readonly) BOOL isNilIdentifier;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@property (nonatomic, readonly, copy) NSString * _Nonnull debugDescription;
@property (nonatomic, readonly, copy) NSString * _Nonnull asString;
@property (nonatomic, readonly) NSInteger hashValue;
- (nonnull instancetype)initWithIdString:(NSString * _Nonnull)idString OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithNsIdString:(NSString * _Nonnull)nsIdString;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone;
- (BOOL)isEqual:(id _Nullable)object;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull key_item;)
+ (NSString * _Nonnull)key_item;
+ (void)setKey_item:(NSString * _Nonnull)value;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC22BASimulationFoundation15InternedStrings")
@interface InternedStrings : NSObject <NSCoding>
+ (InternedStrings * _Nonnull)sharedInstance;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull key_sharedInstance;)
+ (NSString * _Nonnull)key_sharedInstance;
+ (void)setKey_sharedInstance:(NSString * _Nonnull)value;
+ (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
+ (void)decodeWithCoder:(NSCoder * _Nonnull)aDecoder;
@property (nonatomic, readonly) NSInteger count;
@property (nonatomic, readonly) BOOL isEmpty;
- (NSString * _Nonnull)internedString:(NSString * _Nonnull)rawString;
- (BOOL)containsInternedString:(NSString * _Nonnull)rawString;
- (NSString * _Nullable)existingInternedString:(NSString * _Nonnull)rawString;
- (BOOL)containsIdenticalObject:(NSString * _Nonnull)internalString;
- (NSArray<NSString *> * _Nonnull)internedSegments:(NSString * _Nonnull)segmentedString separator:(NSString * _Nonnull)separator;
- (NSArray<NSString *> * _Nonnull)internalizeSegments:(NSArray<NSString *> * _Nonnull)idSegments;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull key_strings;)
+ (NSString * _Nonnull)key_strings;
+ (void)setKey_strings:(NSString * _Nonnull)value;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

@class Settings;
@class NSError;

SWIFT_CLASS("_TtC22BASimulationFoundation6Logger")
@interface Logger : NSObject <NSCoding>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) Settings * _Nonnull defaultSettings;)
+ (Settings * _Nonnull)defaultSettings;
+ (void)setDefaultSettings:(Settings * _Nonnull)value;
@property (nonatomic, strong) Settings * _Nonnull settings;
@property (nonatomic) BOOL isLoggingEnabled;
@property (nonatomic) BOOL isErrorEnabled;
@property (nonatomic) BOOL isInfoEnabled;
@property (nonatomic) BOOL isWarnEnabled;
@property (nonatomic) BOOL isTraceEnabled;
@property (nonatomic) BOOL isDebugEnabled;
@property (nonatomic, readonly) BOOL isAnyLoggingEnabled;
@property (nonatomic, readonly) BOOL isAllLoggingEnabled;
@property (nonatomic, readonly) BOOL isDefaultSettings;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initFrom:(Logger * _Nonnull)from;
- (Logger * _Nonnull)clone;
- (void)reset;
- (void)logInfo:(SWIFT_NOESCAPE NSString * _Nonnull (^ _Nonnull)(void))message;
- (void)logWarn:(SWIFT_NOESCAPE NSString * _Nonnull (^ _Nonnull)(void))message;
- (void)logError:(NSError * _Nonnull)error;
- (void)logErrorMessage:(SWIFT_NOESCAPE NSString * _Nonnull (^ _Nonnull)(void))message;
- (void)logTrace:(SWIFT_NOESCAPE NSString * _Nonnull (^ _Nonnull)(void))message;
- (void)logDebug:(SWIFT_NOESCAPE NSString * _Nonnull (^ _Nonnull)(void))message file:(NSString * _Nonnull)file line:(NSInteger)line function:(NSString * _Nonnull)function;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull key_settings;)
+ (NSString * _Nonnull)key_settings;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
@end

#pragma clang diagnostic pop
